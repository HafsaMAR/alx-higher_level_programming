The '7-base_geometry' Module
============================

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    
    Correct Class Type test:
    >>> bg = BaseGeometry()
    >>> type(bg) == BaseGeometry
    True
    
Using 'area' method from 'BaseGeometry' class
    >>> bg.__class__.area()
    Traceback (most recent call last):
    TypeError: area() missing 1 required positional argument: 'self'

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

Using 'integer_validator' methode from 'BaseGeometry' class



    
    integer_validator methode called via class
    >>> bg.__class__.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 3 required positional arguments: 'self', 'name', and 'value'

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
    >>> bg.integer_validator("my_int", 12)

    >>> bg.integer_validator("width", 89)

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
        ...
    TypeError: name must be an integer

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
        ...
    ValueError: age must be greater than 0

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
        ...
    ValueError: distance must be greater than 0
